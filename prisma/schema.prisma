// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator pothos {
  provider = "prisma-pothos-types"
}

model User {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  email        String         @unique
  firstName    String
  lastName     String
  image        String?
  role         Role           @default(USER)
  mealPlans    MealPlan[]
  meals        Meal[]
  recipes      Recipe[]
  ingredients  Ingredient[]
  mealCategory MealCategory[]
}

enum Role {
  USER
  ADMIN
}

model MealPlan {
  id            Int            @id @default(autoincrement())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  startDate     DateTime
  endDate       DateTime
  mealPlanItems MealPlanItem[]
  user          User           @relation(fields: [userId], references: [id])
  userId        Int
}

model MealPlanItem {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  itemDate       DateTime
  mealCategory   MealCategory? @relation(fields: [mealCategoryId], references: [id])
  mealCategoryId Int?
  meal           Meal?         @relation(fields: [mealId], references: [id])
  mealId         Int?
  recipe         Recipe?       @relation(fields: [recipeId], references: [id])
  recipeId       Int?
  mealPlan       MealPlan      @relation(fields: [mealPlanId], references: [id])
  mealPlanId     Int
}

model Meal {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  image        String?
  name         String
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  mealPlanItem MealPlanItem[]
}

model Recipe {
  id           Int                @id @default(autoincrement())
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  image        String?
  name         String
  servings     Int
  prepTime     Int
  cookTime     Int
  ingredients  RecipeIngredient[]
  directions   String[]
  note         String?
  user         User               @relation(fields: [userId], references: [id])
  userId       Int
  mealPlanItem MealPlanItem[]
}

model MealCategory {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  name         String
  theme        String
  order        Int
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  mealPlanItem MealPlanItem[]
}

model RecipeIngredient {
  id                    Int        @id @default(autoincrement())
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  amount                Int
  ingredientMeasurement String
  ingredient            Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId          Int
  recipe                Recipe     @relation(fields: [recipeId], references: [id])
  recipeId              Int
}

model Ingredient {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  name              String
  recipeIngredients RecipeIngredient[]
  user              User               @relation(fields: [userId], references: [id])
  userId            Int
}
