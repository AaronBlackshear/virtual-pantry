// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator pothos {
  provider = "prisma-pothos-types"
}

model User {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  email     String     @unique
  firstName String
  lastName  String
  image     String?
  role      Role       @default(USER)
  mealPlans MealPlan[]
  meals     Meal[]
}

enum Role {
  USER
  ADMIN
}

model MealPlan {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  startDate DateTime
  endDate   DateTime
  meals     Meal[]
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Meal {
  id           Int        @id @default(autoincrement())
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  title        String?
  mealCategory String?
  mealPlan     MealPlan[]
  recipe       Recipe?
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
}

model Recipe {
  id          Int                @id @default(autoincrement())
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  meal        Meal               @relation(fields: [mealId], references: [id])
  mealId      Int                @unique
  image       String?
  title       String
  servings    Int
  prepTime    Int
  cookTime    Int
  ingredients RecipeIngredient[]
  directions  String[]
  note        String?
}

model RecipeIngredient {
  id                     Int                   @id @default(autoincrement())
  createdAt              DateTime              @default(now())
  updatedAt              DateTime              @updatedAt
  recipe                 Recipe                @relation(fields: [recipeId], references: [id])
  recipeId               Int
  ingredient             Ingredient            @relation(fields: [ingredientId], references: [id])
  ingredientId           Int
  amount                 Int
  ingredientMeasurment   IngredientMeasurment? @relation(fields: [ingredientMeasurmentId], references: [id])
  ingredientMeasurmentId Int?
}

model Ingredient {
  id               Int                @id @default(autoincrement())
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  name             String
  recipeIngredient RecipeIngredient[]
}

model IngredientMeasurment {
  id                  Int                @id @default(autoincrement())
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  singularMeasurement String             @unique
  pluralMeasurement   String             @unique
  recipeIngredient    RecipeIngredient[]
}
